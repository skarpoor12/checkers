{"ast":null,"code":"var _jsxFileName = \"/Users/shreyak/Documents/checkers/src/Board.js\";\nimport React, { Component } from 'react';\nimport { render } from \"react-dom\";\n\nvar createReactClass = require('create-react-class');\n\nvar Square = createReactClass({\n  displayName: \"Square\",\n\n  render() {\n    var highlight = this.props.highlights[this.props.rowInd][this.props.colInd];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.props.handleClick(this.props.rowInd, this.props.colInd),\n      className: \"piece piece-\" + this.props.square,\n      className: \"highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }));\n  }\n\n});\nvar Row = createReactClass({\n  displayName: \"Row\",\n\n  /**build row by looping through 8 squares, list is passed from Board**/\n\n  /**rowArr comes from Board**/\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, this.props.rowArr.map((square, colInd) => {\n      return /*#__PURE__*/React.createElement(Square, {\n        highlights: this.props.highlights,\n        square: square,\n        rowInd: this.props.rowInd,\n        colInd: colInd,\n        handleClick: this.props.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 32\n        }\n      });\n    }));\n  }\n\n});\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    /**Could use a for loop to initialize, but given it's 8x8 every time, I'll just hard code for the initial state**/\n\n    this.state = {\n      /**how we keep track of pieces, because arrays are nice for indexing**/\n\n      /**values represent directions that they can move, +1 is down, -1 is up**/\n      board: [[0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [-1, 0, -1, 0, -1, 0, -1, 0], [0, -1, 0, -1, 0, -1, 0, -1], [-1, 0, -1, 0, -1, 0, -1, 0]],\n      highlights: [['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', '']],\n      currentPlayer: -1,\n      currentPiece: [],\n      moves: []\n    };\n    this.findMoves = this.findMoves.bind(this);\n  }\n\n  handleClick(rowInd, colInd) {\n    /**if this is a highlighted cell that we are moving too**/\n    var tempBoard = Array.from(this.state.board);\n    var tempHigh = Array.from(this.state.highlights);\n\n    if (this.state.highlights[rowInd][colInd] === 'm' || this.state.highlights[rowInd][colInd] === 'j') {\n      tempBoard[this.state.currentPiece[0]][this.state.currentPiece[1]] = 0;\n      tempBoard[rowInd][colInd] = this.state.currentPlayer; //make all deletes\n\n      tempBoard[this.state.currentPiece[0]][this.state.currentPiece[1]] = 0; //make a deletion if we made a jump\n\n      if (colInd - this.state.currentPiece[1] === -2) {\n        var rem_row = rowInd + this.state.currentPlayer;\n        var rem_col = colInd + 1;\n        tempBoard[rem_row][rem_col] = 0;\n      } else if (colInd - this.state.currentPiece[1] === 2) {\n        var rem_row = rowInd + this.state.currentPlayer;\n        var rem_col = colInd - 1;\n        tempBoard[rem_row][rem_col] = 0;\n      } //unhighlight everything\n\n\n      this.state.moves.map((loc, ind) => {\n        tempHigh[loc[0]][loc[1]] = '';\n      });\n      this.setState({\n        currentPlayer: this.state.currentPlayer * -1\n      });\n      this.setState({\n        board: tempBoard\n      });\n      this.setState({\n        highlights: tempHigh\n      });\n    }\n    /**handles case if we are highlighting**/\n    else if (this.state.board[rowInd][colInd] === this.state.currentPlayer) {\n        var local_moves = this.findMoves(rowInd, colInd);\n        local_moves.map((loc, ind) => {\n          tempHigh[loc[0]][loc[1]] = 'h';\n        });\n        this.setState({\n          currentPiece: [rowInd, colInd]\n        });\n        this.setState({\n          moves: local_moves\n        });\n        this.setState({\n          highlights: tempHigh\n        });\n      }\n  }\n\n  findMoves(rowInd, colInd) {\n    var dir = this.state.board[rowInd][colInd];\n    var moves = [];\n\n    if (dir === 0) {\n      return false;\n    }\n\n    ;\n    /**just find empty squares*/\n\n    if (-1 < rowInd + dir < 8) {\n      if (colInd - 1 > 0) {\n        var left = [rowInd + dir, colInd - 1];\n      }\n\n      if (colInd + 1 < 8) {\n        var right = [rowInd + dir, colInd + 1];\n      }\n    }\n\n    if (this.state.board[left[0]][left[1]] !== 0 && -1 < left[0] + dir < 8 && -1 < left[1] - 1 < 8) {\n      if (this.state.board[left[0]][left[1]] === dir * -1 && this.state.board[left[0] + dir][left[1] - 1] === 0) {\n        left = [left[0] + dir, left[1] - 1];\n      }\n\n      ;\n    }\n\n    ;\n    moves.push(left);\n\n    if (this.state.board[right[0]][right[1]] !== 0 && -1 < right[0] + dir < 8 && -1 < right[1] + 1 < 8) {\n      if (this.state.board[right[0]][right[1]] === dir * -1 && this.state.board[right[0] + dir][right[1] + 1] === 0) {\n        right = [right[0] + dir, right[1] + 1];\n      }\n    }\n\n    ;\n    moves.push(right);\n    return moves;\n  }\n  /**build the entire board, which is a bunch of rows**/\n\n\n  render() {\n    var rowInd;\n    var rowArr;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, this.state.board.map((row, ind) => {\n      return /*#__PURE__*/React.createElement(Row, {\n        highlights: this.state.highlights,\n        handleClick: this.handleClick.bind(this),\n        rowInd: ind,\n        rowArr: row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 28\n        }\n      });\n    }));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/shreyak/Documents/checkers/src/Board.js"],"names":["React","Component","render","createReactClass","require","Square","highlight","props","highlights","rowInd","colInd","handleClick","square","Row","rowArr","map","Board","constructor","state","board","currentPlayer","currentPiece","moves","findMoves","bind","tempBoard","Array","from","tempHigh","rem_row","rem_col","loc","ind","setState","local_moves","dir","left","right","push","row"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAA9B;;AAEA,IAAIC,MAAM,GAAGF,gBAAgB,CAAC;AAAA;;AAC1BD,EAAAA,MAAM,GAAI;AACN,QAAII,SAAS,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsB,KAAKD,KAAL,CAAWE,MAAjC,EAAyC,KAAKF,KAAL,CAAWG,MAApD,CAAhB;AACA,wBACI;AAAK,MAAA,SAAS,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,OAAO,EAAE,MAAM,KAAKH,KAAL,CAAWI,WAAX,CAAuB,KAAKJ,KAAL,CAAWE,MAAlC,EAA0C,KAAKF,KAAL,CAAWG,MAArD,CAApB;AAAkF,MAAA,SAAS,EAAE,iBAAe,KAAKH,KAAL,CAAWK,MAAvH;AAA+H,MAAA,SAAS,EAAE,WAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AARyB,CAAD,CAA7B;AAYA,IAAIC,GAAG,GAAGV,gBAAgB,CAAC;AAAA;;AACvB;;AACA;AACAD,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKK,KAAL,CAAWO,MAAX,CAAkBC,GAAlB,CAAsB,CAACH,MAAD,EAASF,MAAT,KAAoB;AACnC,0BAAO,oBAAC,MAAD;AAAQ,QAAA,UAAU,EAAE,KAAKH,KAAL,CAAWC,UAA/B;AAA2C,QAAA,MAAM,EAAEI,MAAnD;AAA2D,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWE,MAA9E;AAAsF,QAAA,MAAM,EAAEC,MAA9F;AAAsG,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWI,WAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACP,KAFA,CADL,CADJ;AAQH;;AAZsB,CAAD,CAA1B;;AAeA,MAAMK,KAAN,SAAoBhB,KAAK,CAACC,SAA1B,CAAoC;AAChCgB,EAAAA,WAAW,CAACV,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA;;AACA,SAAKW,KAAL,GAAc;AACd;;AACA;AACCC,MAAAA,KAAK,EAAE,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAD,EACO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CADP,EAEO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAFP,EAGO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAHP,EAIO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAJP,EAKO,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAC,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,EAAsB,CAAC,CAAvB,EAA0B,CAA1B,CALP,EAMO,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,EAAsB,CAAtB,EAAyB,CAAC,CAA1B,CANP,EAOO,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAC,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,EAAsB,CAAC,CAAvB,EAA0B,CAA1B,CAPP,CAHM;AAWbX,MAAAA,UAAU,EAAE,CAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,EAAsB,EAAtB,CAAD,EACC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,EAAsB,EAAtB,CADD,EAEC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,EAAsB,EAAtB,CAFD,EAGC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,EAAsB,EAAtB,CAHD,EAIC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,EAAsB,EAAtB,CAJD,EAKC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,EAAsB,EAAtB,CALD,EAMC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,EAAsB,EAAtB,CAND,EAOC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,EAAsB,EAAtB,CAPD,CAXC;AAmBbY,MAAAA,aAAa,EAAE,CAAC,CAnBH;AAoBbC,MAAAA,YAAY,EAAE,EApBD;AAqBbC,MAAAA,KAAK,EAAE;AArBM,KAAd;AAwBA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACH;;AAEDb,EAAAA,WAAW,CAACF,MAAD,EAASC,MAAT,EAAiB;AACxB;AACA,QAAIe,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAW,KAAKT,KAAL,CAAWC,KAAtB,CAAhB;AACA,QAAIS,QAAQ,GAAGF,KAAK,CAACC,IAAN,CAAW,KAAKT,KAAL,CAAWV,UAAtB,CAAf;;AAEA,QAAI,KAAKU,KAAL,CAAWV,UAAX,CAAsBC,MAAtB,EAA8BC,MAA9B,MAA0C,GAA1C,IAAiD,KAAKQ,KAAL,CAAWV,UAAX,CAAsBC,MAAtB,EAA8BC,MAA9B,MAA0C,GAA/F,EAAoG;AAChGe,MAAAA,SAAS,CAAC,KAAKP,KAAL,CAAWG,YAAX,CAAwB,CAAxB,CAAD,CAAT,CAAsC,KAAKH,KAAL,CAAWG,YAAX,CAAwB,CAAxB,CAAtC,IAAoE,CAApE;AACAI,MAAAA,SAAS,CAAChB,MAAD,CAAT,CAAkBC,MAAlB,IAA4B,KAAKQ,KAAL,CAAWE,aAAvC,CAFgG,CAIhG;;AACAK,MAAAA,SAAS,CAAC,KAAKP,KAAL,CAAWG,YAAX,CAAwB,CAAxB,CAAD,CAAT,CAAsC,KAAKH,KAAL,CAAWG,YAAX,CAAwB,CAAxB,CAAtC,IAAoE,CAApE,CALgG,CAOhG;;AACA,UAAIX,MAAM,GAAC,KAAKQ,KAAL,CAAWG,YAAX,CAAwB,CAAxB,CAAP,KAAoC,CAAC,CAAzC,EAA4C;AACxC,YAAIQ,OAAO,GAAGpB,MAAM,GAAC,KAAKS,KAAL,CAAWE,aAAhC;AACA,YAAIU,OAAO,GAAGpB,MAAM,GAAC,CAArB;AACAe,QAAAA,SAAS,CAACI,OAAD,CAAT,CAAmBC,OAAnB,IAA8B,CAA9B;AACH,OAJD,MAKK,IAAIpB,MAAM,GAAC,KAAKQ,KAAL,CAAWG,YAAX,CAAwB,CAAxB,CAAP,KAAoC,CAAxC,EAA2C;AAC5C,YAAIQ,OAAO,GAAGpB,MAAM,GAAC,KAAKS,KAAL,CAAWE,aAAhC;AACA,YAAIU,OAAO,GAAGpB,MAAM,GAAC,CAArB;AACAe,QAAAA,SAAS,CAACI,OAAD,CAAT,CAAmBC,OAAnB,IAA8B,CAA9B;AACH,OAjB+F,CAmBhG;;;AACA,WAAKZ,KAAL,CAAWI,KAAX,CAAiBP,GAAjB,CAAqB,CAACgB,GAAD,EAAMC,GAAN,KAAc;AAC/BJ,QAAAA,QAAQ,CAACG,GAAG,CAAC,CAAD,CAAJ,CAAR,CAAiBA,GAAG,CAAC,CAAD,CAApB,IAA2B,EAA3B;AACH,OAFD;AAKA,WAAKE,QAAL,CAAc;AAACb,QAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWE,aAAX,GAAyB,CAAC;AAA1C,OAAd;AACA,WAAKa,QAAL,CAAc;AAACd,QAAAA,KAAK,EAAEM;AAAR,OAAd;AACA,WAAKQ,QAAL,CAAc;AAACzB,QAAAA,UAAU,EAAEoB;AAAb,OAAd;AACH;AACD;AA7BA,SA8BK,IAAI,KAAKV,KAAL,CAAWC,KAAX,CAAiBV,MAAjB,EAAyBC,MAAzB,MAAqC,KAAKQ,KAAL,CAAWE,aAApD,EAAkE;AACnE,YAAIc,WAAW,GAAG,KAAKX,SAAL,CAAed,MAAf,EAAuBC,MAAvB,CAAlB;AAEAwB,QAAAA,WAAW,CAACnB,GAAZ,CAAgB,CAACgB,GAAD,EAAMC,GAAN,KAAc;AAC1BJ,UAAAA,QAAQ,CAACG,GAAG,CAAC,CAAD,CAAJ,CAAR,CAAiBA,GAAG,CAAC,CAAD,CAApB,IAA2B,GAA3B;AACH,SAFD;AAIA,aAAKE,QAAL,CAAc;AAACZ,UAAAA,YAAY,EAAE,CAACZ,MAAD,EAASC,MAAT;AAAf,SAAd;AACA,aAAKuB,QAAL,CAAc;AAACX,UAAAA,KAAK,EAAEY;AAAR,SAAd;AACA,aAAKD,QAAL,CAAc;AAACzB,UAAAA,UAAU,EAAEoB;AAAb,SAAd;AAEH;AACJ;;AAEDL,EAAAA,SAAS,CAACd,MAAD,EAASC,MAAT,EAAiB;AACrB,QAAIyB,GAAG,GAAG,KAAKjB,KAAL,CAAWC,KAAX,CAAiBV,MAAjB,EAAyBC,MAAzB,CAAV;AACA,QAAIY,KAAK,GAAG,EAAZ;;AAEA,QAAIa,GAAG,KAAK,CAAZ,EAAe;AACZ,aAAQ,KAAR;AACF;;AAAA;AACD;;AACA,QAAI,CAAC,CAAD,GAAG1B,MAAM,GAAC0B,GAAV,GAAc,CAAlB,EAAqB;AAClB,UAAIzB,MAAM,GAAC,CAAP,GAAS,CAAb,EAAgB;AACZ,YAAI0B,IAAI,GAAG,CAAC3B,MAAM,GAAC0B,GAAR,EAAazB,MAAM,GAAC,CAApB,CAAX;AACH;;AACD,UAAIA,MAAM,GAAC,CAAP,GAAS,CAAb,EAAgB;AACZ,YAAI2B,KAAK,GAAG,CAAC5B,MAAM,GAAC0B,GAAR,EAAazB,MAAM,GAAC,CAApB,CAAZ;AACH;AACH;;AAED,QAAI,KAAKQ,KAAL,CAAWC,KAAX,CAAiBiB,IAAI,CAAC,CAAD,CAArB,EAA0BA,IAAI,CAAC,CAAD,CAA9B,MAAqC,CAArC,IAA0C,CAAC,CAAD,GAAGA,IAAI,CAAC,CAAD,CAAJ,GAAQD,GAAX,GAAe,CAAzD,IAA8D,CAAC,CAAD,GAAGC,IAAI,CAAC,CAAD,CAAJ,GAAQ,CAAX,GAAa,CAA/E,EAAkF;AAC/E,UAAI,KAAKlB,KAAL,CAAWC,KAAX,CAAiBiB,IAAI,CAAC,CAAD,CAArB,EAA0BA,IAAI,CAAC,CAAD,CAA9B,MAAqCD,GAAG,GAAC,CAAC,CAA1C,IAA+C,KAAKjB,KAAL,CAAWC,KAAX,CAAiBiB,IAAI,CAAC,CAAD,CAAJ,GAAQD,GAAzB,EAA8BC,IAAI,CAAC,CAAD,CAAJ,GAAQ,CAAtC,MAA2C,CAA9F,EAAiG;AAC7FA,QAAAA,IAAI,GAAG,CAACA,IAAI,CAAC,CAAD,CAAJ,GAAQD,GAAT,EAAcC,IAAI,CAAC,CAAD,CAAJ,GAAQ,CAAtB,CAAP;AACH;;AAAA;AACH;;AAAA;AACDd,IAAAA,KAAK,CAACgB,IAAN,CAAWF,IAAX;;AAEA,QAAI,KAAKlB,KAAL,CAAWC,KAAX,CAAiBkB,KAAK,CAAC,CAAD,CAAtB,EAA2BA,KAAK,CAAC,CAAD,CAAhC,MAAuC,CAAvC,IAA4C,CAAC,CAAD,GAAGA,KAAK,CAAC,CAAD,CAAL,GAASF,GAAZ,GAAgB,CAA5D,IAAiE,CAAC,CAAD,GAAGE,KAAK,CAAC,CAAD,CAAL,GAAS,CAAZ,GAAc,CAAnF,EAAsF;AACnF,UAAI,KAAKnB,KAAL,CAAWC,KAAX,CAAiBkB,KAAK,CAAC,CAAD,CAAtB,EAA2BA,KAAK,CAAC,CAAD,CAAhC,MAAuCF,GAAG,GAAC,CAAC,CAA5C,IAAiD,KAAKjB,KAAL,CAAWC,KAAX,CAAiBkB,KAAK,CAAC,CAAD,CAAL,GAASF,GAA1B,EAA+BE,KAAK,CAAC,CAAD,CAAL,GAAS,CAAxC,MAA6C,CAAlG,EAAqG;AACjGA,QAAAA,KAAK,GAAG,CAACA,KAAK,CAAC,CAAD,CAAL,GAASF,GAAV,EAAeE,KAAK,CAAC,CAAD,CAAL,GAAS,CAAxB,CAAR;AACH;AACH;;AAAA;AACDf,IAAAA,KAAK,CAACgB,IAAN,CAAWD,KAAX;AAEA,WAAOf,KAAP;AACJ;AAED;;;AACApB,EAAAA,MAAM,GAAG;AACL,QAAIO,MAAJ;AACA,QAAIK,MAAJ;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKI,KAAL,CAAWC,KAAX,CAAiBJ,GAAjB,CAAqB,CAACwB,GAAD,EAAMP,GAAN,KAAc;AAC/B,0BAAO,oBAAC,GAAD;AAAK,QAAA,UAAU,EAAE,KAAKd,KAAL,CAAWV,UAA5B;AAAwC,QAAA,WAAW,EAAE,KAAKG,WAAL,CAAiBa,IAAjB,CAAsB,IAAtB,CAArD;AAAkF,QAAA,MAAM,EAAEQ,GAA1F;AAA+F,QAAA,MAAM,EAAEO,GAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,CAFJ,CADJ;AASH;;AAhI+B;;AAmIpC,eAAevB,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { render } from \"react-dom\";\n\nvar createReactClass = require('create-react-class');\n\nvar Square = createReactClass({\n    render () {\n        var highlight = this.props.highlights[this.props.rowInd][this.props.colInd];\n        return (\n            <div className={\"square\"}>\n                <div onClick={() => this.props.handleClick(this.props.rowInd, this.props.colInd)} className={\"piece piece-\"+this.props.square} className={\"highlight\"}></div>\n            </div>\n        );\n    }\n});\n\n\nvar Row = createReactClass({\n    /**build row by looping through 8 squares, list is passed from Board**/\n    /**rowArr comes from Board**/\n    render() {\n        return (\n            <div className={\"row\"}>\n                {this.props.rowArr.map((square, colInd) => {\n                        return(<Square highlights={this.props.highlights} square={square} rowInd={this.props.rowInd} colInd={colInd} handleClick={this.props.handleClick}/>)\n                })\n            }\n            </div>\n        )\n    }\n});\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        /**Could use a for loop to initialize, but given it's 8x8 every time, I'll just hard code for the initial state**/\n        this.state =  {\n        /**how we keep track of pieces, because arrays are nice for indexing**/\n        /**values represent directions that they can move, +1 is down, -1 is up**/\n         board: [[0, 1, 0, 1, 0, 1, 0, 1],\n                       [1, 0, 1, 0, 1, 0, 1, 0],\n                       [0, 1, 0, 1, 0, 1, 0, 1],\n                       [0, 0, 0, 0, 0, 0, 0, 0],\n                       [0, 0, 0, 0, 0, 0, 0, 0],\n                       [-1, 0, -1, 0, -1, 0, -1, 0],\n                       [0, -1, 0, -1, 0, -1, 0, -1],\n                       [-1, 0, -1, 0, -1, 0, -1, 0]],\n         highlights: [['','','','','','','','',],\n                      ['','','','','','','','',],\n                      ['','','','','','','','',],\n                      ['','','','','','','','',],\n                      ['','','','','','','','',],\n                      ['','','','','','','','',],\n                      ['','','','','','','','',],\n                      ['','','','','','','','',]],\n         currentPlayer: -1,\n         currentPiece: [],\n         moves: []\n        };\n\n        this.findMoves = this.findMoves.bind(this);\n    }\n\n    handleClick(rowInd, colInd) {\n        /**if this is a highlighted cell that we are moving too**/\n        var tempBoard = Array.from(this.state.board);\n        var tempHigh = Array.from(this.state.highlights);\n\n        if (this.state.highlights[rowInd][colInd] === 'm' || this.state.highlights[rowInd][colInd] === 'j') {\n            tempBoard[this.state.currentPiece[0]][this.state.currentPiece[1]] = 0\n            tempBoard[rowInd][colInd] = this.state.currentPlayer;\n\n            //make all deletes\n            tempBoard[this.state.currentPiece[0]][this.state.currentPiece[1]] = 0;\n\n            //make a deletion if we made a jump\n            if (colInd-this.state.currentPiece[1]===-2) {\n                var rem_row = rowInd+this.state.currentPlayer;\n                var rem_col = colInd+1;\n                tempBoard[rem_row][rem_col] = 0;\n            }\n            else if (colInd-this.state.currentPiece[1]===2) {\n                var rem_row = rowInd+this.state.currentPlayer;\n                var rem_col = colInd-1;\n                tempBoard[rem_row][rem_col] = 0;\n            }\n\n            //unhighlight everything\n            this.state.moves.map((loc, ind) => {\n                tempHigh[loc[0]][loc[1]] = '';\n            });\n\n\n            this.setState({currentPlayer: this.state.currentPlayer*-1});\n            this.setState({board: tempBoard});\n            this.setState({highlights: tempHigh});\n        }\n        /**handles case if we are highlighting**/\n        else if (this.state.board[rowInd][colInd] === this.state.currentPlayer){\n            var local_moves = this.findMoves(rowInd, colInd);\n\n            local_moves.map((loc, ind) => {\n                tempHigh[loc[0]][loc[1]] = 'h';\n            });\n\n            this.setState({currentPiece: [rowInd, colInd]})\n            this.setState({moves: local_moves});\n            this.setState({highlights: tempHigh});\n\n        }\n    }\n\n    findMoves(rowInd, colInd) {\n         var dir = this.state.board[rowInd][colInd];\n         var moves = [];\n\n         if (dir === 0) {\n            return (false);\n         };\n         /**just find empty squares*/\n         if (-1<rowInd+dir<8) {\n            if (colInd-1>0) {\n                var left = [rowInd+dir, colInd-1];\n            }\n            if (colInd+1<8) {\n                var right = [rowInd+dir, colInd+1];\n            }\n         }\n\n         if (this.state.board[left[0]][left[1]]!==0 && -1<left[0]+dir<8 && -1<left[1]-1<8) {\n            if (this.state.board[left[0]][left[1]]===dir*-1 && this.state.board[left[0]+dir][left[1]-1]===0) {\n                left = [left[0]+dir, left[1]-1];\n            };\n         };\n         moves.push(left);\n\n         if (this.state.board[right[0]][right[1]]!==0 && -1<right[0]+dir<8 && -1<right[1]+1<8) {\n            if (this.state.board[right[0]][right[1]]===dir*-1 && this.state.board[right[0]+dir][right[1]+1]===0) {\n                right = [right[0]+dir, right[1]+1];\n            }\n         };\n         moves.push(right);\n\n         return(moves);\n    }\n\n    /**build the entire board, which is a bunch of rows**/\n    render() {\n        var rowInd;\n        var rowArr;\n\n        return(\n            <div className=\"container\">\n                {\n                this.state.board.map((row, ind) => {\n                    return(<Row highlights={this.state.highlights} handleClick={this.handleClick.bind(this)} rowInd={ind} rowArr={row}/>);\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}