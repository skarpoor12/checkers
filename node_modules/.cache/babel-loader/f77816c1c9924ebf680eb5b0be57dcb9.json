{"ast":null,"code":"var _jsxFileName = \"/Users/shreyak/Documents/checkers/src/components/Board.jsx\";\nimport React, { Component } from 'react';\nvar Square = React.createClass({\n  displayName: \"Square\",\n\n  render() {\n    var highlight = this.props.highlights[this.props.rowInd][this.props.colInd];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"square square-\" + this.props.colInd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.props.handleClick,\n      rowInd: this.props.rowInd,\n      colInd: this.props.colInd,\n      className: \"highlight-\" + {\n        highlight\n      },\n      className: \"piece-\" + this.props.square,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }\n    }));\n  }\n\n});\nvar Row = React.createClass({\n  displayName: \"Row\",\n\n  /**build row by looping through 8 squares, list is passed from Board**/\n\n  /**rowArr comes from Board**/\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row row-\" + this.props.rowInd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, this.props.rowArr.map((square, colInd) => {\n      /*#__PURE__*/\n      React.createElement(Square, {\n        square: square,\n        rowInd: this.props.rowInd,\n        colInd: colInd,\n        handleClick: this.handleClick.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }\n      });\n    }));\n  }\n\n});\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    /**Could use a for loop to initialize, but given it's 8x8 every time, I'll just hard code for the initial state**/\n\n    this.state = {\n      /**how we keep track of pieces, because arrays are nice for indexing**/\n\n      /**values represent directions that they can move, +1 is down, -1 is up**/\n      board: [[0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [-1, 0, -1, 0, -1, 0, -1, 0], [0, -1, 0, -1, 0, -1, 0, -1], [-1, 0, -1, 0, -1, 0, -1, 0]],\n      highlights: [['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', '']],\n      currentPlayer: -1,\n      currentPiece: []\n    };\n  }\n\n  handleClick() {\n    /**if this is a highlighted cell that we are moving too**/\n    if (this.state.highlights[rowInd][colInd] === 'm' || this.state.highlights[rowInd][colInd] === 'j') {\n      this.state.board[this.state.currentPiece[0]][this.state.currentPiece[1]] = 0;\n      this.state.board[rowInd][colInd] = this.state.currentPlayer; //make all deletes\n\n      this.state.board[this.state.currentPiece[0]][this.state.currentPiece[1]] = 0; //make a deletion if we made a jump\n\n      if (colInd - this.state.currentPiece[1] === -2) {\n        var rem_row = rowInd + this.state.currentPlayer;\n        var rem_col = colInd + 1;\n        this.state.board[rem_row][rem_col] = 0;\n      } else if (colInd - this.state.currentPiece[1] === 2) {\n        var rem_row = rowInd + this.state.currentPlayer;\n        var rem_col = colInd - 1;\n        this.state.board[rem_row][rem_col] = 0;\n      } //unhighlight everything\n\n\n      moves.map((loc, ind) => {\n        this.state.highlights[loc[0]][loc[1]] = '';\n      });\n      this.state.currentPlayer = this.state.currentPlayer * -1;\n    }\n    /**handles case if we are highlighting**/\n    else if (this.state.board[rowInd][colInd] === this.state.currentPlayer) {\n        var moves = findMoves(rowInd, colInd);\n        moves.map((loc, ind) => {\n          this.state.highlights[loc[0]][loc[1]] = 'h';\n        });\n        this.state.currentPiece.push(loc[rowInd]);\n        this.state.currentPiece.push(loc[colInd]);\n      }\n  }\n\n  findMoves(event) {\n    var rowInd = parseInt(e.target.attributes['rowInd'].nodeValue);\n    var colInd = parseInt(e.target.attributes['colInd'].nodeValue);\n    var dir = this.board[rowInd][colInd];\n    var moves = [];\n    var deletes = [];\n\n    if (dir === 0) {\n      return false;\n    }\n\n    ;\n    /**just find empty squares*/\n\n    if (0 <= rowInd + dir < 8) {\n      if (colInd - 1 > 0) {\n        var left = [rowInd + dir, colInd - 1];\n      }\n\n      if (colInd + 1 < 8) {\n        var right = [rowInd + dir, colInd + 1];\n      }\n    }\n\n    if (this.board[left[0]][left[1]] !== 0 && 0 <= left[0] + dir < 8 && 0 <= left[1] - 1 < 8) {\n      if (this.board[left[0]][left[1]] === dir * -1 && this.board[left[0] + dir][left[1] - 1] === 0) {\n        left = [left[0] + dir, left[1] - 1];\n      }\n\n      ;\n    }\n\n    ;\n    moves.push(left);\n\n    if (this.board[right[0]][right[1]] !== 0 && 0 <= right[0] + dir < 8 && 0 <= right[1] + 1 < 8) {\n      if (this.board[right[0]][right[1]] === dir * -1 && this.board[right[0] + dir][right[1] + 1] === 0) {\n        right = [right[0] + dir, right[1] + 1];\n      }\n    }\n\n    ;\n    moves.push(right);\n    return moves;\n  }\n  /**build the entire board, which is a bunch of rows**/\n\n\n  render() {\n    var rowInd;\n    var rowArr;\n    var showBoard = this.state.board.map(function (row, ind) {\n      /*#__PURE__*/\n      React.createElement(Row, {\n        rowInd: ind,\n        rowArr: row,\n        handleClick: this.handleClick.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, showBoard);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/shreyak/Documents/checkers/src/components/Board.jsx"],"names":["React","Component","Square","createClass","render","highlight","props","highlights","rowInd","colInd","handleClick","square","Row","rowArr","map","bind","Board","constructor","state","board","currentPlayer","currentPiece","rem_row","rem_col","moves","loc","ind","findMoves","push","event","parseInt","e","target","attributes","nodeValue","dir","deletes","left","right","showBoard","row"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\nvar Square = React.createClass({\n    render () {\n        var highlight = this.props.highlights[this.props.rowInd][this.props.colInd];\n        return (\n            <div className={\"square square-\"+this.props.colInd}>\n                <div onClick={this.props.handleClick} rowInd={this.props.rowInd} colInd={this.props.colInd} className={\"highlight-\"+{highlight}} className={\"piece-\"+this.props.square}></div>\n            </div>\n        );\n    }\n});\n\n\nvar Row = React.createClass({\n    /**build row by looping through 8 squares, list is passed from Board**/\n    /**rowArr comes from Board**/\n    render() {\n        return (\n            <div className={\"row row-\"+this.props.rowInd}>\n                {this.props.rowArr.map((square, colInd) => {\n                        <Square square={square} rowInd={this.props.rowInd} colInd={colInd} handleClick={this.handleClick.bind(this)}/>\n                })\n               }\n            </div>\n        )\n    }\n});\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        /**Could use a for loop to initialize, but given it's 8x8 every time, I'll just hard code for the initial state**/\n        this.state =  {\n        /**how we keep track of pieces, because arrays are nice for indexing**/\n        /**values represent directions that they can move, +1 is down, -1 is up**/\n         board: [[0, 1, 0, 1, 0, 1, 0, 1],\n                       [1, 0, 1, 0, 1, 0, 1, 0],\n                       [0, 1, 0, 1, 0, 1, 0, 1],\n                       [0, 0, 0, 0, 0, 0, 0, 0],\n                       [0, 0, 0, 0, 0, 0, 0, 0],\n                       [-1, 0, -1, 0, -1, 0, -1, 0],\n                       [0, -1, 0, -1, 0, -1, 0, -1],\n                       [-1, 0, -1, 0, -1, 0, -1, 0]],\n         highlights: [['','','','','','','','',],\n                      ['','','','','','','','',],\n                      ['','','','','','','','',],\n                      ['','','','','','','','',],\n                      ['','','','','','','','',],\n                      ['','','','','','','','',],\n                      ['','','','','','','','',],\n                      ['','','','','','','','',]],\n         currentPlayer: -1,\n         currentPiece: []\n        }\n    }\n\n    handleClick() {\n        /**if this is a highlighted cell that we are moving too**/\n        if (this.state.highlights[rowInd][colInd] === 'm' || this.state.highlights[rowInd][colInd] === 'j') {\n            this.state.board[this.state.currentPiece[0]][this.state.currentPiece[1]] = 0;\n            this.state.board[rowInd][colInd] = this.state.currentPlayer;\n\n            //make all deletes\n            this.state.board[this.state.currentPiece[0]][this.state.currentPiece[1]] = 0;\n            //make a deletion if we made a jump\n            if (colInd-this.state.currentPiece[1]===-2) {\n                var rem_row = rowInd+this.state.currentPlayer;\n                var rem_col = colInd+1;\n                this.state.board[rem_row][rem_col] = 0\n            }\n            else if (colInd-this.state.currentPiece[1]===2) {\n                var rem_row = rowInd+this.state.currentPlayer;\n                var rem_col = colInd-1;\n                this.state.board[rem_row][rem_col] = 0\n            }\n\n            //unhighlight everything\n            moves.map((loc, ind) => {\n                this.state.highlights[loc[0]][loc[1]] = '';\n            });\n\n\n            this.state.currentPlayer = this.state.currentPlayer*-1;\n        }\n        /**handles case if we are highlighting**/\n        else if (this.state.board[rowInd][colInd] === this.state.currentPlayer){\n            var moves = findMoves(rowInd, colInd);\n\n            moves.map((loc, ind) => {\n                this.state.highlights[loc[0]][loc[1]] = 'h';\n            });\n\n            this.state.currentPiece.push(loc[rowInd]);\n            this.state.currentPiece.push(loc[colInd]);\n        }\n    }\n\n    findMoves(event) {\n         var rowInd = parseInt(e.target.attributes['rowInd'].nodeValue);\n         var colInd =parseInt(e.target.attributes['colInd'].nodeValue);\n\n\n         var dir = this.board[rowInd][colInd];\n         var moves = [];\n         var deletes = [];\n\n         if (dir === 0) {\n            return (false);\n         };\n         /**just find empty squares*/\n         if (0<=rowInd+dir<8) {\n            if (colInd-1>0) {\n                var left = [rowInd+dir, colInd-1];\n            }\n            if (colInd+1<8) {\n                var right = [rowInd+dir, colInd+1];\n            }\n         }\n\n         if (this.board[left[0]][left[1]]!==0 && 0<=left[0]+dir<8 && 0<=left[1]-1<8) {\n            if (this.board[left[0]][left[1]]===dir*-1 && this.board[left[0]+dir][left[1]-1]===0) {\n                left = [left[0]+dir, left[1]-1];\n            };\n         };\n         moves.push(left);\n\n         if (this.board[right[0]][right[1]]!==0 && 0<=right[0]+dir<8 && 0<=right[1]+1<8) {\n            if (this.board[right[0]][right[1]]===dir*-1 && this.board[right[0]+dir][right[1]+1]===0) {\n                right = [right[0]+dir, right[1]+1];\n            }\n         };\n         moves.push(right);\n\n         return(moves);\n    }\n\n    /**build the entire board, which is a bunch of rows**/\n    render() {\n        var rowInd;\n        var rowArr;\n        var showBoard = this.state.board.map(function(row, ind) {\n             <Row rowInd={ind} rowArr={row} handleClick={this.handleClick.bind(this)}/>\n        });\n\n        return(\n            <div class=\"container\">\n                {showBoard}\n            </div>\n        );\n    }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}